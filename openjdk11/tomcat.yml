---
- name: installing tomcat on ubuntu server 
  hosts: all
  become: yes
  vars:
    java_package: openjdk-11-jdk
    user_name: tomcat
    user_group: tomcat
    user_home: /opt/tomcat
    user_shell: /bin/false/
    
  tasks:
    - name: install openjdk-11
      ansible.builtin.apt:
        update_cache: true
        name: "{{ java_package}}"
        state: present
    - name: creating the tomcat group
      ansible.builtin.group:
        name: "{{ user_name}}"
        state: present    
    - name: creating the tomcat user
      ansible.builtin.user:
        name: "{{ user_name}}"
        group: {{ user_group:}}
        create_home: true
        home: "{{ user_home}}"
        shell: "{{ user_shell}}"
        state: present
    - name: download the tomcat 10.1.4
      ansible.builtin.get_url:
        url: https://www-eu.apache.org/dist/tomcat/tomcat-10/v10.1.4/bin/apache-tomcat-10.1.4.tar.gz 
        dest: /tmp/apache-tomcat-10.1.4.tar.gz
    - name: unzip the tomcat tar file
      ansible.builtin.unarchive:
        src: /tmp/apache-tomcat-10.1.4.tar.gz
        remote_src: yes
        dest: /opt/tomcat
    - name: creating a symbolic link
      ansible.builtin.file:
        src: /opt/tomcat/apache-tomcat-10.1.4
        dest: /opt/tomcat/latest
        owner: "{{ user_name}}"
        group: "{{ user_group}}"
        state: link 
    - name: granting the premissions
      ansible.builtin.file:
        dest: /opt/tomcat/latest
        owner: "{{ user_name}}"
        group: "{{ user_group}}"
        recurse: yes
        state: directory
    - name: giving executable premissions
      ansible.builtin.shell: sudo sh -c 'chmod +x /opt/tomcat/latest/bin/*.sh' 
    - name: copy the conntent to tomcat.service
      ansible.builtin.copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ user_name}}"
        group: "{{ user_group}}" 
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        daemon_reload: true 
        enabled: true
        state: started
    - name: copy the user.xmll conntent
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: /opt/tomcat/latest/webapps/manager/META-INF/context.xml
        owner: "{{ user_name}}"
        group: "{{ user_group}}"
    - name: copy the hostmanager context
      ansible.builtin.copy:
        src: context.xml
        dest: /opt/tomcat/latest/webapps/manager/META-INF/context.xml
        owner: "{{ user_name}}"
        group: "{{ user_group}}"
    - name: copy the host manager context
      ansible.builtin.copy:
        src: hostmanager-context.xml
        dest: /opt/tomcat/latest/webapps/host-manager/META-INF/context.xml
        owner: "{{ user_name}}"
        group: "{{ user_group}}"
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        daemon_reload: true
        state: restarted





